{{- $config := fromYaml (include "imagescan.engine.config" .) -}}
{{- /* Make ".Files" of the chart accessible and properly formatted when accessed via $config' */ -}}
{{- $_ := set $config "Files" .Files -}}
{{- if $config.featureConfig.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "agent.resource.name" $config }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "common.labels.with.chart" $config | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "common.labels" $config | indent 6 }}
  replicas: {{ $config.agentConfig.replicaCount }}
  template:
    metadata:
      annotations:
{{ include "common.pod.annotations" $config | indent 8 }}
        # adding it so workload will be restarted to be updated with certificates that were re-generated
        timestamp: {{ now | quote }}
      labels:
{{ include "common.labels" $config | indent 8 }}
    spec:
{{ include "common.pod.properties" $config | indent 6 }}
      containers:
      # Main container
      - name: {{ $config.agentName }}
        image: {{ template "agent.main.image" $config }}
        imagePullPolicy: {{ $config.Values.imagePullPolicy }}
{{- include "imagescan.engine.resources" $config | indent 8 }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
        - name: servercert-volume
          mountPath: /etc/servercert
        - name: clientcert-volume
          mountPath: /etc/clientcert
        - name: clientkey-volume
          mountPath: /etc/clientkey
        command: ["/central_agent"]
        env:
        - name: REGISTRY_AGENT_MODE
          value: "scan"
        - name: NODE_AGENT_SELECTOR
          value: app.kubernetes.io/name={{ template "imagescan.daemon.resource.name" . }}
          {{- /* TODO: investigate why $config instead of "." fails */}}
        - name: RELEASE_NAME
          value: {{ .Release.Name }}
        - name: CLOUDGUARD_REGION
          value: {{ include "dome9.subdomain" $config | default "us" }}
{{- if eq $config.containerRuntime "cri-o" }}
{{- if $config.featureConfig.mountPodman }}
        - name: USE_PODMAN_EXPORT
          value: "both"
{{- else }}
        - name: USE_PODMAN_EXPORT
          value: "false"
{{- end }}
{{- end }}
{{- if $config.featureConfig.maxImageSizeMb }}
{{- if eq ( $config.featureConfig.maxImageSizeMb | int ) 0 }}
{{- fail "\n\nimageScan: wrong value for maxImageSizeMb, should be integer" -}}
{{- else }}
        - name: MAX_SCAN_IMAGE_SIZE_MB
          value: "{{ $config.featureConfig.maxImageSizeMb }}"
{{- end }}
{{- end }}
{{- /* TODO: move user env. variables to the end for all agents */}}
{{ include "common.env" $config | indent 8 }}
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ template "cg.creds.secret.name" $config }}
      - name: servercert-volume
        configMap:
          name: {{ template "imagescan.daemon.resource.name" . }}
          {{- /* TODO: investigate why $config instead of "." fails */}}
      - name: clientcert-volume
        configMap:
          name: {{ template "imagescan.engineAndList.commonResource.name" $config }}
      - name: clientkey-volume
        secret:
          secretName: {{ template "imagescan.engineAndList.commonResource.name" $config }}
{{- end -}}
