{{- $config := fromYaml (include "imagescan.armon.config" .) -}}
{{- /* Make ".Files" of the chart accessible and properly formatted when accessed via $config' */ -}}
{{- $_ := set $config "Files" $.Files -}}
{{- /* Mark the config as holding a resource of type "DaemonSet" */ -}}
{{- $_ := set $config "resourceKind" "DaemonSet" -}}
{{- if and $config.featureConfig.enabled $config.agentConfig.enabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "daemonset.daemon.resource.name" $config }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "common.labels.with.chart" $config | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "common.selector.labels" $config | indent 6 }}
{{ include "daemonset.updateStrategy" $config | indent 2}}
  template:
    metadata:
      annotations:
{{ include "common.pod.annotations" $config | indent 8 }}
      labels:
{{ include "common.labels.with.chart" $config | indent 8 }}
    spec:
{{ include "common.pod.properties" $config | indent 6 }}
      containers:
      - name: {{ $config.agentName }}
        image: {{ template "agent.main.image" $config }}
        imagePullPolicy: {{ $config.Values.imagePullPolicy }}
        securityContext:
        {{- if contains "openshift" $config.platform }}
          seLinuxOptions:
              type: spc_t
        {{- end }}  
          runAsUser: 0
          capabilities:
            add:
            - SYS_RESOURCE  # setrlimit
            - SYS_ADMIN     # bpf
            - IPC_LOCK      # lock memory for bpf kernel >= 5.11
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
        {{- if eq $config.containerRuntime "docker" }}
        - mountPath: /var/run/docker.sock
          name: docker-sock
          readOnly: true
        {{- else if eq $config.containerRuntime "containerd" }}
        - mountPath: /run/containerd/containerd.sock
          name: containerd-sock
          readOnly: true
        {{- else if eq $config.containerRuntime "cri-o" }}
        - mountPath: /var/run/crio/crio.sock
          name: crio-sock
          readOnly: true
        {{- end }}
{{- if $config.agentConfig.resources }}
        resources:
{{ toYaml $config.agentConfig.resources | indent 10 }}
{{- end }}
        env: 
        - name: REPORT_USE_DOME9_AGENT_CFG
          value: "1"
        - name: "REPORT_POST_ENDPOINT"
          value: "/imageaccessruntimemonitor" 
        - name: "TELEMETRY_URL"
          value: "https://eptelemetry.epmgmt.checkpoint.com/gwstats/services/antimalware/1_0_0/log"   
        - name: "CONTAINERS_RUNTIME"
          value: {{ $config.containerRuntime }}

{{ include "common.env" $config | indent 8 }}
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ template "cg.creds.secret.name" $config }}
      {{- if eq $config.containerRuntime "docker" }}
      - name: docker-sock
        hostPath:
        {{- if eq $config.platform "tanzu" }}
          path: /var/vcap/sys/run/docker/docker.sock
        {{- else }}
          path: /var/run/docker.sock
        {{- end }}
          type: Socket
      {{- else if eq $config.containerRuntime "containerd" }}
      - name: containerd-sock
        hostPath:
          path: {{ include "containerd.sock.path" $config }}
          type: Socket
      {{- else if eq $config.containerRuntime "cri-o" }}
      - name: crio-sock
        hostPath:
          path: /run/crio/crio.sock
          type: Socket
      {{- end }}   
---        
{{- end -}}
