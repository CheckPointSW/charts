{{- $config := fromYaml (include "runtime.daemon.config" .) -}}
{{- if $config.featureConfig.enabled -}}
{{- if $config.Values.rbac.pspEnabled -}}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ template "agent.resource.name" $config }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "common.labels.with.chart" $config | indent 4 }}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: {{ $config.Values.podAnnotations.seccomp }}
spec:
{{- if or $config.featureConfig.enableFileReputation (or (eq $config.platform "kubernetes.coreos") (eq $config.platform "eks.bottlerocket")) }}
  hostPID: true
{{- else }}
  hostPID: false
{{- end}}
  hostIPC: false
  hostNetwork: false
{{- if $config.featureConfig.BPF }}
  privileged: false
  allowPrivilegeEscalation: false
  allowedCapabilities:
  - SYS_ADMIN
  - SYS_RESOURCE
  - SYS_NICE
  - SYS_PTRACE
  - FOWNER
  - SYS_PACCT
  - NET_ADMIN
  - NET_RAW
{{- if $config.featureConfig.enableFileReputation }}
  - AUDIT_CONTROL
  - AUDIT_READ
  - AUDIT_WRITE
{{- end }}
{{- if or (eq "gke.cos" $config.platform) (eq "gke.autopilot" $config.platform) }}
  - AUDIT_CONTROL
{{- end}}
{{- else }}
  privileged: true
  allowPrivilegeEscalation: true
{{- end }}
  hostNetwork: true
  volumes:
  - 'secret'
  - 'configMap'
  - 'hostPath'
  - 'emptyDir'
  allowedHostPaths:
{{- if eq $config.containerRuntime "docker" }}
{{- if eq $config.platform "tanzu" }}
  - pathPrefix: /var/vcap/sys/run/docker/docker.sock
    readOnly: true
{{- else }}
  - pathPrefix: /var/run/docker.sock
    readOnly: true
  - pathPrefix: /var/lib/docker
    readOnly: true
{{- end }}
{{- else if eq $config.containerRuntime "containerd" }}
  - pathPrefix: {{ include "containerd.sock.path" $config }}
    readOnly: true
  - pathPrefix: {{ include "containerd.runtime.v2.task" $config }}
    readOnly: true
{{- else if eq $config.containerRuntime "cri-o" }}
  - pathPrefix: /var/run/crio/crio.sock
    readOnly: true
  - pathPrefix: /var/lib/containers/storage
    readOnly: true
  - pathPrefix: /etc/containers/oci/hooks.d/
{{- end }}
{{- if or (eq "gke.cos" $config.platform) (eq "gke.autopilot" $config.platform) }}
  - pathPrefix: /var/run/dbus/system_bus_socket
  - pathPrefix: /etc/systemd/system
{{- else if or (eq $config.platform "kubernetes.coreos") (eq "eks" $config.platform) }}
  - pathPrefix: /
{{- end}}
{{- if $config.featureConfig.BPF }}
  - pathPrefix: /var/local
{{- else}}
  - pathPrefix: /dev
{{- end }}
  - pathPrefix: /run/xtables.lock
  - pathPrefix: /boot
    readOnly: true
  - pathPrefix: /lib/modules
    readOnly: true
  - pathPrefix: /usr
    readOnly: true
  - pathPrefix: /var/lib/docker
    readOnly: true
  - pathPrefix: /dev
    readOnly: false
  - pathPrefix: /proc
    readOnly: true
  - pathPrefix: /tmp
    readOnly: false
  - pathPrefix: /sys/kernel/debug
    readOnly: true
  - pathPrefix: /etc
    readOnly: true
  fsGroup:
    rule: 'MayRunAs' # Allows the range but not sets default
    ranges:
    - min: 1
      max: 65535
  readOnlyRootFilesystem: false
  runAsUser:
    rule: 'RunAsAny'
  runAsGroup:
    rule: 'MayRunAs' # Allows the range but not sets default
    ranges:
    - min: 1
      max: 65535
  supplementalGroups:
    rule: 'MayRunAs' # Allows the range but not sets default
    ranges:
      # Forbid adding the root group.
    - min: 1
      max: 65535
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
{{- end -}}
{{- end -}}